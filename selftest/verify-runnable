#!/bin/bash
#
# Very simple test to verify that the basic functionality works
#
# For this to work, you need to run both master and agent on your local
# host.
#

. ${0%/*}/functions

testbus_test_begin verify_runnable1

TESTBUS_HOST=`testbus_claim_host`

if ! testbus_run_command --host $TESTBUS_HOST /bin/true; then
	testbus_test_failure "client does not propagate remote command's exit status" >&2
	exit 1
fi

if testbus_run_command --host $TESTBUS_HOST /bin/false; then
	testbus_test_failure "client does not propagate remote command's exit status" >&2
	exit 1
fi

expect=$TESTCASE_TEMPDIR/expect
/usr/bin/wc < /etc/hosts > $expect

stdout=$TESTCASE_TEMPDIR/stdout
testbus_run_command --host $TESTBUS_HOST --send-stdin /usr/bin/wc < /etc/hosts >$stdout

diff=$TESTCASE_TEMPDIR/diff
if ! diff -bu $stdout $expect >$diff; then
	echo "Command output differs between local host and SUT"
	echo "---"
	cat $diff
	echo "---"
	exit 1
fi >&2

testbus_call show-xml --raw > $TESTCASE_TEMPDIR/xml-tree-after
if cmp -s $TESTCASE_TEMPDIR/xml-tree-before $TESTCASE_TEMPDIR/xml-tree-after; then
	echo "Testbus object tree not clean after test run"
	echo "Differences before/after"
	diff -u $TESTCASE_TEMPDIR/xml-tree-before $TESTCASE_TEMPDIR/xml-tree-after
	exit 1
fi >&2

testbus_test_success

testbus_test_begin verify_runnable2
if ! testbus_claim_node sut; then
	testbus_test_failure "cannot claim node"
elif ! testbus_node_run sut /bin/true; then
	testbus_test_failure "cannot run command on node <sut>"
	exit 1
fi
testbus_test_success

testbus_exit
